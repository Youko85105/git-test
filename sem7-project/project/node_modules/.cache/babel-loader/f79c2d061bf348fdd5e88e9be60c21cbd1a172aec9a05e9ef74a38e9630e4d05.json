{"ast":null,"code":"// Dashboard API service\nimport { makeRequest } from './api';\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Get dashboard data based on user role\nexport const getDashboardData = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/private/dashboard', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\n\n// Get creator stats\nexport const getCreatorStats = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/private/subscriber', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\n\n// Get posts for creator dashboard\nexport const getCreatorPosts = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/private/post', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\n\n// Get subscriptions for reader dashboard\nexport const getSubscriptions = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/private/creator/subscribed', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\n\n// Get all creators (for admin)\nexport const getAllCreators = async () => {\n  return makeRequest('/public/creator/all', {\n    method: 'GET'\n  });\n};\n\n// Get all users (admin only)\nexport const getAllUsers = async () => {\n  const token = localStorage.getItem('token');\n  return axios.get(`${API_BASE_URL}/admin/users`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\n\n// Admin login\nexport const adminLogin = async credentials => {\n  return makeRequest('/auth/admin-login', {\n    method: 'POST',\n    data: credentials\n  });\n};\n\n// Get platform stats (admin)\nexport const getPlatformStats = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/admin/stats', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\n\n// Get notifications count\nexport const getNotificationCount = async () => {\n  const token = localStorage.getItem('token');\n  return axios.get(`${API_BASE_URL}/notifications/unread/count`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["makeRequest","axios","API_BASE_URL","process","env","REACT_APP_API_URL","getDashboardData","token","localStorage","getItem","method","headers","getCreatorStats","getCreatorPosts","getSubscriptions","getAllCreators","getAllUsers","get","adminLogin","credentials","data","getPlatformStats","getNotificationCount"],"sources":["/Users/htoothetnaung/Documents/UIT/Sem7_KE/Projects/ADBMS/git-test/sem7-project/project/src/services/dashboard.js"],"sourcesContent":["// Dashboard API service\nimport { makeRequest } from './api';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Get dashboard data based on user role\nexport const getDashboardData = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/private/dashboard', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n};\n\n// Get creator stats\nexport const getCreatorStats = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/private/subscriber', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n};\n\n// Get posts for creator dashboard\nexport const getCreatorPosts = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/private/post', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n};\n\n// Get subscriptions for reader dashboard\nexport const getSubscriptions = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/private/creator/subscribed', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n};\n\n// Get all creators (for admin)\nexport const getAllCreators = async () => {\n  return makeRequest('/public/creator/all', {\n    method: 'GET',\n  });\n};\n\n// Get all users (admin only)\nexport const getAllUsers = async () => {\n  const token = localStorage.getItem('token');\n  return axios.get(`${API_BASE_URL}/admin/users`, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n};\n\n// Admin login\nexport const adminLogin = async (credentials) => {\n  return makeRequest('/auth/admin-login', {\n    method: 'POST',\n    data: credentials,\n  });\n};\n\n// Get platform stats (admin)\nexport const getPlatformStats = async () => {\n  const token = localStorage.getItem('token');\n  return makeRequest('/admin/stats', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n};\n\n// Get notifications count\nexport const getNotificationCount = async () => {\n  const token = localStorage.getItem('token');\n  return axios.get(`${API_BASE_URL}/notifications/unread/count`, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}