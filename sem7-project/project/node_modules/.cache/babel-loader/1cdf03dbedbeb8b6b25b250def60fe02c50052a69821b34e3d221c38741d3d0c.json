{"ast":null,"code":"var _jsxFileName = \"/Users/chawsuhan/git-test/sem7-project/project/src/components/PostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { usePost } from \"../contexts/PostContext\";\nimport CommentsSection from \"./CommentsSection\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport PostCard from \"./PostCard\"; // ← add\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = ({\n  isDarkMode,\n  toggleTheme,\n  isLoggedIn,\n  logout\n}) => {\n  _s();\n  const location = useLocation();\n  const [search] = useSearchParams();\n  const [highlightedCommentId, setHighlightedCommentId] = useState(null);\n  const {\n    post,\n    postId,\n    comments,\n    getReplies,\n    createComment,\n    updateComment,\n    deleteComment,\n    toggleCommentLike,\n    currentUser,\n    loading\n  } = usePost();\n\n  // Read highlight target from state (preferred) or query (?comment= / ?highlight=)\n  useEffect(() => {\n    var _location$state;\n    const fromState = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.highlightCommentId) || null;\n    const fromQuery = search.get(\"comment\") || search.get(\"highlight\") || null;\n    setHighlightedCommentId(fromState || fromQuery);\n  }, [location.state, search]);\n\n  // Optional: smooth-scroll to the highlighted comment when comments load\n  useEffect(() => {\n    if (!highlightedCommentId || !(comments !== null && comments !== void 0 && comments.length)) return;\n    // Try two common hooks the comment item might expose:\n    const el = document.querySelector(`[data-comment-id=\"${highlightedCommentId}\"]`) || document.getElementById(`comment-${highlightedCommentId}`);\n    if (el) {\n      el.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\"\n      });\n      el.classList.add(\"ring-2\", \"ring-blue-500\");\n      setTimeout(() => el.classList.remove(\"ring-2\", \"ring-blue-500\"), 1500);\n    }\n  }, [highlightedCommentId, comments]);\n\n  // ---- NEW: build an author fallback from whatever the post contains\n  const author = useMemo(() => {\n    const a = post !== null && post !== void 0 && post.author && typeof post.author === \"object\" ? post.author : post !== null && post !== void 0 && post.creator && typeof post.creator === \"object\" ? post.creator : null;\n    if (a) return {\n      _id: a._id || a.id,\n      username: a.username || a.name,\n      handle: a.handle,\n      // keep original — PostCard now supports string or object\n      profilePic: a.profilePic || a.avatar\n    };\n\n    // flat fallbacks\n    return {\n      _id: (post === null || post === void 0 ? void 0 : post.authorId) || (post === null || post === void 0 ? void 0 : post.creatorId),\n      username: (post === null || post === void 0 ? void 0 : post.authorName) || (post === null || post === void 0 ? void 0 : post.creatorName),\n      // any of these might exist in your payload\n      profilePic: (post === null || post === void 0 ? void 0 : post.authorPicUrl) || (post === null || post === void 0 ? void 0 : post.authorPic) || (post === null || post === void 0 ? void 0 : post.profilePic)\n    };\n  }, [post]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-10\",\n    children: \"Loading post...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 23\n  }, this);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-10\",\n    children: \"Post not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen ${isDarkMode ? \"bg-gray-900 text-white\" : \"bg-white text-black\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme,\n      isLoggedIn: isLoggedIn,\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-2xl mx-auto py-12 px-4\",\n      children: /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post,\n        isDarkMode: isDarkMode,\n        author: author // ← pass the fallback author\n        ,\n        onLikeToggle: () => {},\n        highlightId: highlightedCommentId,\n        children: /*#__PURE__*/_jsxDEV(CommentsSection, {\n          postId: postId,\n          title: \"Comments\",\n          highlightId: highlightedCommentId // ✅ here\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"GF78G4yebhCDXCroq+d0X+3wpps=\", false, function () {\n  return [useLocation, useSearchParams, usePost];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useLocation","useSearchParams","usePost","CommentsSection","Navbar","Footer","PostCard","jsxDEV","_jsxDEV","PostPage","isDarkMode","toggleTheme","isLoggedIn","logout","_s","location","search","highlightedCommentId","setHighlightedCommentId","post","postId","comments","getReplies","createComment","updateComment","deleteComment","toggleCommentLike","currentUser","loading","_location$state","fromState","state","highlightCommentId","fromQuery","get","length","el","document","querySelector","getElementById","scrollIntoView","behavior","block","classList","add","setTimeout","remove","author","a","creator","_id","id","username","name","handle","profilePic","avatar","authorId","creatorId","authorName","creatorName","authorPicUrl","authorPic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLikeToggle","highlightId","title","_c","$RefreshReg$"],"sources":["/Users/chawsuhan/git-test/sem7-project/project/src/components/PostPage.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { usePost } from \"../contexts/PostContext\";\nimport CommentsSection from \"./CommentsSection\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport PostCard from \"./PostCard\"; // ← add\n\nconst PostPage = ({ isDarkMode, toggleTheme, isLoggedIn, logout }) => {\n  const location = useLocation();\n  const [search] = useSearchParams();\n  const [highlightedCommentId, setHighlightedCommentId] = useState(null);\n\n  const {\n    post,\n    postId,\n    comments,\n    getReplies,\n    createComment,\n    updateComment,\n    deleteComment,\n    toggleCommentLike,\n    currentUser,\n    loading,\n  } = usePost();\n\n  // Read highlight target from state (preferred) or query (?comment= / ?highlight=)\n  useEffect(() => {\n    const fromState = location.state?.highlightCommentId || null;\n    const fromQuery = search.get(\"comment\") || search.get(\"highlight\") || null;\n    setHighlightedCommentId(fromState || fromQuery);\n  }, [location.state, search]);\n\n  // Optional: smooth-scroll to the highlighted comment when comments load\n  useEffect(() => {\n    if (!highlightedCommentId || !comments?.length) return;\n    // Try two common hooks the comment item might expose:\n    const el =\n      document.querySelector(`[data-comment-id=\"${highlightedCommentId}\"]`) ||\n      document.getElementById(`comment-${highlightedCommentId}`);\n    if (el) {\n      el.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n      el.classList.add(\"ring-2\", \"ring-blue-500\");\n      setTimeout(() => el.classList.remove(\"ring-2\", \"ring-blue-500\"), 1500);\n    }\n  }, [highlightedCommentId, comments]);\n\n   // ---- NEW: build an author fallback from whatever the post contains\n  const author = useMemo(() => {\n  const a = (post?.author && typeof post.author === \"object\")\n    ? post.author\n    : (post?.creator && typeof post.creator === \"object\")\n    ? post.creator\n    : null;\n\n  if (a) return {\n    _id: a._id || a.id,\n    username: a.username || a.name,\n    handle: a.handle,\n    // keep original — PostCard now supports string or object\n    profilePic: a.profilePic || a.avatar,\n  };\n\n  // flat fallbacks\n  return {\n    _id: post?.authorId || post?.creatorId,\n    username: post?.authorName || post?.creatorName,\n    // any of these might exist in your payload\n    profilePic: post?.authorPicUrl || post?.authorPic || post?.profilePic,\n  };\n}, [post]);\n\n\n  if (loading) return <div className=\"text-center mt-10\">Loading post...</div>;\n  if (!post)   return <div className=\"text-center mt-10\">Post not found</div>;\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? \"bg-gray-900 text-white\" : \"bg-white text-black\"}`}>\n      <Navbar isDarkMode={isDarkMode} toggleTheme={toggleTheme} isLoggedIn={isLoggedIn} logout={logout} />\n      <main className=\"max-w-2xl mx-auto py-12 px-4\">\n        <PostCard\n  post={post}\n  isDarkMode={isDarkMode}\n   author={author}                 // ← pass the fallback author\n  onLikeToggle={() => {}}\n  highlightId={highlightedCommentId}\n>\n  {/* If you’re keeping CommentsSection inside the card: */}\n  <CommentsSection\n    postId={postId}\n    title=\"Comments\"\n    highlightId={highlightedCommentId}   // ✅ here\n  />\n</PostCard>\n\n      </main>\n      <Footer isDarkMode={isDarkMode} />\n    </div>\n  );\n};\n\nexport default PostPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}