{"ast":null,"code":"var _jsxFileName = \"/Users/htoothetnaung/Documents/UIT/Sem7_KE/Projects/ADBMS/git-test/sem7-project/project/src/contexts/PostContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAsync } from \"../hooks/useAsync\";\nimport { getPost } from \"../services/posts\";\nimport { toggleCommentLike, createComment, updateComment, deleteComment } from \"../services/comments\"; // ✅ Make sure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\nexport function usePost() {\n  _s();\n  return useContext(Context);\n}\n_s(usePost, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function PostProvider({\n  children\n}) {\n  _s2();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    value: data\n  } = useAsync(() => getPost(id), [id]);\n  const [comments, setComments] = useState([]);\n  const commentsByParentId = useMemo(() => {\n    const group = {};\n    comments.forEach(comment => {\n      group[comment.parentId] ||= [];\n      group[comment.parentId].push(comment);\n    });\n    return group;\n  }, [comments]);\n  useEffect(() => {\n    if ((data === null || data === void 0 ? void 0 : data.comments) == null) return;\n    setComments(data.comments.map(comment => ({\n      ...comment,\n      id: comment._id,\n      parentId: comment.parentId || null\n    })));\n  }, [data === null || data === void 0 ? void 0 : data.comments]);\n  function getReplies(parentId) {\n    return commentsByParentId[parentId];\n  }\n  function createLocalComment(comment) {\n    setComments(prev => [comment, ...prev]);\n  }\n  function updateLocalComment(id, updatedComment) {\n    setComments(prev => prev.map(comment => comment._id === id ? updatedComment : comment));\n  }\n  function deleteLocalComment(id) {\n    setComments(prev => prev.filter(comment => comment._id !== id));\n  }\n  function toggleLocalCommentLike(id, addLike) {\n    setComments(prev => prev.map(comment => {\n      if (comment._id === id) {\n        const count = comment.likeCount || 0;\n        return {\n          ...comment,\n          likeCount: addLike ? count + 1 : Math.max(count - 1, 0),\n          likedByMe: addLike\n        };\n      }\n      return comment;\n    }));\n  }\n\n  // ✅ ACTUAL backend toggle like call\n  function onToggleLike({\n    id,\n    userId\n  }) {\n    return toggleCommentLike({\n      id,\n      userId\n    }).then(({\n      addLike\n    }) => {\n      toggleLocalCommentLike(id, addLike);\n      return {\n        addLike\n      };\n    });\n  }\n\n  // ✅ Optional: Real backend comment create/update/delete\n  function onReply({\n    postId,\n    message,\n    parentId,\n    user\n  }) {\n    return createComment({\n      postId,\n      message,\n      parentId,\n      user\n    }).then(comment => {\n      createLocalComment({\n        ...comment,\n        id: comment._id,\n        parentId: comment.parentId || null\n      });\n    });\n  }\n  function onUpdate({\n    id,\n    message,\n    userId\n  }) {\n    return updateComment({\n      id,\n      message,\n      userId\n    }).then(updated => {\n      updateLocalComment(id, {\n        ...updated,\n        id: updated._id\n      });\n    });\n  }\n  function onDelete({\n    id,\n    userId\n  }) {\n    return deleteComment({\n      id,\n      userId\n    }).then(deleted => {\n      updateLocalComment(id, {\n        ...deleted,\n        id: deleted._id,\n        message: \"\" // Soft delete\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      post: (data === null || data === void 0 ? void 0 : data.post) || {},\n      // ✅ Fix: pass post only\n      postId: id,\n      comments,\n      getReplies,\n      createComment: onReply,\n      updateComment: onUpdate,\n      deleteComment: onDelete,\n      toggleCommentLike: onToggleLike,\n      currentUser: {\n        _id: \"688785e69f794e8d634682c7\",\n        name: \"sally\"\n      },\n      // ✅ consistent _id\n      loading\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"error-msg\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s2(PostProvider, \"+gKVu1MrU9vRMaQsPCAkM2Vn3/A=\", false, function () {\n  return [useParams, useAsync];\n});\n_c = PostProvider;\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useMemo","useState","useParams","useAsync","getPost","toggleCommentLike","createComment","updateComment","deleteComment","jsxDEV","_jsxDEV","Context","createContext","usePost","_s","PostProvider","children","_s2","id","loading","error","value","data","comments","setComments","commentsByParentId","group","forEach","comment","parentId","push","map","_id","getReplies","createLocalComment","prev","updateLocalComment","updatedComment","deleteLocalComment","filter","toggleLocalCommentLike","addLike","count","likeCount","Math","max","likedByMe","onToggleLike","userId","then","onReply","postId","message","user","onUpdate","updated","onDelete","deleted","Provider","post","currentUser","name","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/htoothetnaung/Documents/UIT/Sem7_KE/Projects/ADBMS/git-test/sem7-project/project/src/contexts/PostContext.js"],"sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAsync } from \"../hooks/useAsync\";\nimport { getPost } from \"../services/posts\";\nimport {\n  toggleCommentLike,\n  createComment,\n  updateComment,\n  deleteComment,\n} from \"../services/comments\"; // ✅ Make sure this path is correct\n\nconst Context = React.createContext();\n\nexport function usePost() {\n  return useContext(Context);\n}\n\nexport function PostProvider({ children }) {\n  const { id } = useParams();\n  const { loading, error, value: data } = useAsync(() => getPost(id), [id]);\n\n  const [comments, setComments] = useState([]);\n\n  const commentsByParentId = useMemo(() => {\n    const group = {};\n    comments.forEach(comment => {\n      group[comment.parentId] ||= [];\n      group[comment.parentId].push(comment);\n    });\n    return group;\n  }, [comments]);\n\n  useEffect(() => {\n    if (data?.comments == null) return;\n    setComments(\n      data.comments.map(comment => ({\n        ...comment,\n        id: comment._id,\n        parentId: comment.parentId || null,\n      }))\n    );\n  }, [data?.comments]);\n\n  function getReplies(parentId) {\n    return commentsByParentId[parentId];\n  }\n\n  function createLocalComment(comment) {\n    setComments(prev => [comment, ...prev]);\n  }\n\n  function updateLocalComment(id, updatedComment) {\n    setComments(prev =>\n      prev.map(comment =>\n        comment._id === id ? updatedComment : comment\n      )\n    );\n  }\n\n  function deleteLocalComment(id) {\n    setComments(prev =>\n      prev.filter(comment => comment._id !== id)\n    );\n  }\n\n  function toggleLocalCommentLike(id, addLike) {\n    setComments(prev =>\n      prev.map(comment => {\n        if (comment._id === id) {\n          const count = comment.likeCount || 0;\n          return {\n            ...comment,\n            likeCount: addLike ? count + 1 : Math.max(count - 1, 0),\n            likedByMe: addLike,\n          };\n        }\n        return comment;\n      })\n    );\n  }\n\n  // ✅ ACTUAL backend toggle like call\n  function onToggleLike({ id, userId }) {\n    return toggleCommentLike({ id, userId }).then(({ addLike }) => {\n      toggleLocalCommentLike(id, addLike);\n      return { addLike };\n    });\n  }\n\n  // ✅ Optional: Real backend comment create/update/delete\n  function onReply({ postId, message, parentId, user }) {\n    return createComment({ postId, message, parentId, user }).then(comment => {\n      createLocalComment({\n        ...comment,\n        id: comment._id,\n        parentId: comment.parentId || null,\n      });\n    });\n  }\n\n  function onUpdate({ id, message, userId }) {\n    return updateComment({ id, message, userId }).then(updated => {\n      updateLocalComment(id, { ...updated, id: updated._id });\n    });\n  }\n\n  function onDelete({ id, userId }) {\n    return deleteComment({ id, userId }).then(deleted => {\n      updateLocalComment(id, {\n        ...deleted,\n        id: deleted._id,\n        message: \"\", // Soft delete\n      });\n    });\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        post: data?.post || {}, // ✅ Fix: pass post only\n        postId: id,\n        comments,\n        getReplies,\n        createComment: onReply,\n        updateComment: onUpdate,\n        deleteComment: onDelete,\n        toggleCommentLike: onToggleLike,\n        currentUser: { _id: \"688785e69f794e8d634682c7\", name: \"sally\" }, // ✅ consistent _id\n        loading,\n      }}\n    >\n      {loading ? (\n        <h1>Loading</h1>\n      ) : error ? (\n        <h1 className=\"error-msg\">{error}</h1>\n      ) : (\n        children\n      )}\n    </Context.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}