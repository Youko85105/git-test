{"ast":null,"code":"import { makeRequest } from \"./api\";\nexport function createComment({\n  postId,\n  message,\n  parentId,\n  user\n}) {\n  return makeRequest(`/posts/${postId}/comments`, {\n    method: \"POST\",\n    data: {\n      message,\n      parentId,\n      user\n    }\n  });\n}\nexport function updateComment({\n  message,\n  id,\n  userId\n}) {\n  return makeRequest(`/comments/${id}`, {\n    method: \"PUT\",\n    data: {\n      message,\n      userId\n    }\n  });\n}\nexport function deleteComment({\n  id,\n  userId\n}) {\n  return makeRequest(`/comments/${id}`, {\n    method: \"DELETE\",\n    data: {\n      userId\n    }\n  });\n}\nexport function toggleCommentLike({\n  id: commentId,\n  userId\n}) {\n  return makeRequest(`/likes/toggle`, {\n    method: \"POST\",\n    data: {\n      user: userId,\n      commentId\n    }\n  });\n}\nexport function getPost(postId) {\n  return makeRequest(`/posts/${postId}`);\n}\n\n// This function makes a request to get the current user data based on the JWT token.\nexport function getCurrentUser(token) {\n  return fetch('/api/auth/user', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}` // Pass token in Authorization header\n    }\n  }).then(response => response.json()).then(data => data.user) // Assume the response contains a 'user' object\n  .catch(error => {\n    console.error('Error fetching current user:', error);\n    throw error;\n  });\n}","map":{"version":3,"names":["makeRequest","createComment","postId","message","parentId","user","method","data","updateComment","id","userId","deleteComment","toggleCommentLike","commentId","getPost","getCurrentUser","token","fetch","headers","then","response","json","catch","error","console"],"sources":["/Users/chawsuhan/git-test/sem7-project/project/src/services/comments.js"],"sourcesContent":["import { makeRequest } from \"./api\";\n\nexport function createComment({ postId, message, parentId, user }) {\n  return makeRequest(`/posts/${postId}/comments`, {\n    method: \"POST\",\n    data: { message, parentId, user },\n  });\n}\n\nexport function updateComment({ message, id, userId }) {\n  return makeRequest(`/comments/${id}`, {\n    method: \"PUT\",\n    data: { message, userId },\n  });\n}\n\nexport function deleteComment({ id, userId }) {\n  return makeRequest(`/comments/${id}`, {\n    method: \"DELETE\",\n    data: { userId },\n  });\n}\n\nexport function toggleCommentLike({ id: commentId, userId }) {\n  return makeRequest(`/likes/toggle`, {\n    method: \"POST\",\n    data: { user: userId, commentId },\n  });\n}\n\nexport function getPost(postId) {\n  return makeRequest(`/posts/${postId}`);\n}\n\n// This function makes a request to get the current user data based on the JWT token.\nexport function getCurrentUser(token) {\n  return fetch('/api/auth/user', {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,  // Pass token in Authorization header\n    },\n  })\n    .then(response => response.json())\n    .then(data => data.user)  // Assume the response contains a 'user' object\n    .catch(error => {\n      console.error('Error fetching current user:', error);\n      throw error;\n    });\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,SAASC,aAAaA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EACjE,OAAOL,WAAW,CAAC,UAAUE,MAAM,WAAW,EAAE;IAC9CI,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;MAAEJ,OAAO;MAAEC,QAAQ;MAAEC;IAAK;EAClC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,aAAaA,CAAC;EAAEL,OAAO;EAAEM,EAAE;EAAEC;AAAO,CAAC,EAAE;EACrD,OAAOV,WAAW,CAAC,aAAaS,EAAE,EAAE,EAAE;IACpCH,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE;MAAEJ,OAAO;MAAEO;IAAO;EAC1B,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,aAAaA,CAAC;EAAEF,EAAE;EAAEC;AAAO,CAAC,EAAE;EAC5C,OAAOV,WAAW,CAAC,aAAaS,EAAE,EAAE,EAAE;IACpCH,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE;MAAEG;IAAO;EACjB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASE,iBAAiBA,CAAC;EAAEH,EAAE,EAAEI,SAAS;EAAEH;AAAO,CAAC,EAAE;EAC3D,OAAOV,WAAW,CAAC,eAAe,EAAE;IAClCM,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;MAAEF,IAAI,EAAEK,MAAM;MAAEG;IAAU;EAClC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,OAAOA,CAACZ,MAAM,EAAE;EAC9B,OAAOF,WAAW,CAAC,UAAUE,MAAM,EAAE,CAAC;AACxC;;AAEA;AACA,OAAO,SAASa,cAAcA,CAACC,KAAK,EAAE;EACpC,OAAOC,KAAK,CAAC,gBAAgB,EAAE;IAC7BX,MAAM,EAAE,KAAK;IACbY,OAAO,EAAE;MACP,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAG;IACvC;EACF,CAAC,CAAC,CACCG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACZ,IAAI,IAAIA,IAAI,CAACF,IAAI,CAAC,CAAE;EAAA,CACzBiB,KAAK,CAACC,KAAK,IAAI;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}