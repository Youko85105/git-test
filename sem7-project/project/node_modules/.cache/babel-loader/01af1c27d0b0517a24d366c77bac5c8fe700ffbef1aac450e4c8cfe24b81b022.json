{"ast":null,"code":"// Simple API service for making HTTP requests\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nexport async function makeRequest(endpoint, options = {}) {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    ...options\n  };\n  if (options.data) {\n    if (options.method === 'DELETE') {\n      // For DELETE requests, send data in the body\n      config.body = JSON.stringify(options.data);\n    } else {\n      config.body = JSON.stringify(options.data);\n    }\n  }\n  try {\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error(error.message || 'Network request failed');\n  }\n}","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","makeRequest","endpoint","options","url","config","headers","credentials","data","method","body","JSON","stringify","response","fetch","ok","errorData","json","catch","Error","message","status","error"],"sources":["/Users/chawsuhan/git-test/sem7-project/project/src/services/api.js"],"sourcesContent":["// Simple API service for making HTTP requests\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nexport async function makeRequest(endpoint, options = {}) {\n  const url = `${API_BASE_URL}${endpoint}`;\n  \n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    ...options,\n  };\n\n  if (options.data) {\n    if (options.method === 'DELETE') {\n      // For DELETE requests, send data in the body\n      config.body = JSON.stringify(options.data);\n    } else {\n      config.body = JSON.stringify(options.data);\n    }\n  }\n\n  try {\n    const response = await fetch(url, config);\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    throw new Error(error.message || 'Network request failed');\n  }\n}"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,OAAO,eAAeC,WAAWA,CAACC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACxD,MAAMC,GAAG,GAAG,GAAGP,YAAY,GAAGK,QAAQ,EAAE;EAExC,MAAMG,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,WAAW,EAAE,SAAS;IACtB,GAAGJ;EACL,CAAC;EAED,IAAIA,OAAO,CAACK,IAAI,EAAE;IAChB,IAAIL,OAAO,CAACM,MAAM,KAAK,QAAQ,EAAE;MAC/B;MACAJ,MAAM,CAACK,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,OAAO,CAACK,IAAI,CAAC;IAC5C,CAAC,MAAM;MACLH,MAAM,CAACK,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,OAAO,CAACK,IAAI,CAAC;IAC5C;EACF;EAEA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAEC,MAAM,CAAC;IAEzC,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;MACzD,MAAM,IAAIC,KAAK,CAACH,SAAS,CAACI,OAAO,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAAE,CAAC;IAChF;IAEA,OAAO,MAAMR,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAM,IAAIH,KAAK,CAACG,KAAK,CAACF,OAAO,IAAI,wBAAwB,CAAC;EAC5D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}