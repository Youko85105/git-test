{"ast":null,"code":"// src/services/posts.js\nimport { makeRequest } from \"./makeRequest\";\n\n// viewer fetches posts of a given creator (gated by subscription)\nexport function getCreatorPosts(creatorId) {\n  return makeRequest(`/private/post/${creatorId}`, {\n    auth: true\n  });\n}\n\n// creator fetches their own posts (dashboard)\nexport function getMyPosts() {\n  return makeRequest(`/private/post`, {\n    auth: true\n  });\n}\n\n// single post + comments\nexport function getPostDetail(postId) {\n  return makeRequest(`/private/post/detail/${postId}`, {\n    auth: true\n  });\n}\n/** --- Backward-compat aliases so existing code doesn't break --- */\n// Old: getPost(id)  -> now getPostDetail(id)\nexport const getPost = getPostDetail;\n\n// Old: getPosts() was ambiguous. If you used it for “my posts”, map it here:\nexport const getPosts = getMyPosts;\n// (If some places used getPosts(creatorId) to mean creator’s posts,\n// keep using getCreatorPosts there explicitly—this alias stays zero-arg.)","map":{"version":3,"names":["makeRequest","getCreatorPosts","creatorId","auth","getMyPosts","getPostDetail","postId","getPost","getPosts"],"sources":["/Users/chawsuhan/git-test/sem7-project/project/src/services/posts.js"],"sourcesContent":["// src/services/posts.js\nimport { makeRequest } from \"./makeRequest\"\n\n// viewer fetches posts of a given creator (gated by subscription)\nexport function getCreatorPosts(creatorId) {\n  return makeRequest(`/private/post/${creatorId}`, { auth: true });\n}\n\n// creator fetches their own posts (dashboard)\nexport function getMyPosts() {\n  return makeRequest(`/private/post`, { auth: true });\n}\n\n// single post + comments\nexport function getPostDetail(postId) {\n  return makeRequest(`/private/post/detail/${postId}`, { auth: true });\n}\n/** --- Backward-compat aliases so existing code doesn't break --- */\n// Old: getPost(id)  -> now getPostDetail(id)\nexport const getPost = getPostDetail;\n\n// Old: getPosts() was ambiguous. If you used it for “my posts”, map it here:\nexport const getPosts = getMyPosts;\n// (If some places used getPosts(creatorId) to mean creator’s posts,\n// keep using getCreatorPosts there explicitly—this alias stays zero-arg.)"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,eAAe;;AAE3C;AACA,OAAO,SAASC,eAAeA,CAACC,SAAS,EAAE;EACzC,OAAOF,WAAW,CAAC,iBAAiBE,SAAS,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC;AAClE;;AAEA;AACA,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B,OAAOJ,WAAW,CAAC,eAAe,EAAE;IAAEG,IAAI,EAAE;EAAK,CAAC,CAAC;AACrD;;AAEA;AACA,OAAO,SAASE,aAAaA,CAACC,MAAM,EAAE;EACpC,OAAON,WAAW,CAAC,wBAAwBM,MAAM,EAAE,EAAE;IAAEH,IAAI,EAAE;EAAK,CAAC,CAAC;AACtE;AACA;AACA;AACA,OAAO,MAAMI,OAAO,GAAGF,aAAa;;AAEpC;AACA,OAAO,MAAMG,QAAQ,GAAGJ,UAAU;AAClC;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}