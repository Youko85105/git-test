{"ast":null,"code":"var _jsxFileName = \"/Users/chawsuhan/git-test/sem7-project/project/src/contexts/PostContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAsync } from \"../hooks/useAsync\";\nimport { getPost } from \"../services/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\nexport function usePost() {\n  _s();\n  return useContext(Context);\n}\n_s(usePost, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function PostProvider({\n  children\n}) {\n  _s2();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    value: data\n  } = useAsync(() => getPost(id), [id]);\n  const [comments, setComments] = useState([]);\n  const commentsByParentId = useMemo(() => {\n    const group = {};\n    comments.forEach(comment => {\n      group[comment.parentId] ||= [];\n      group[comment.parentId].push(comment);\n    });\n    return group;\n  }, [comments]);\n  console.log(\"All comments:\", comments);\n  console.log(\"Grouped comments:\", commentsByParentId);\n  useEffect(() => {\n    if ((data === null || data === void 0 ? void 0 : data.comments) == null) return;\n    setComments(data.comments.map(comment => ({\n      ...comment,\n      id: comment._id,\n      parentId: comment.parentId || null\n    })));\n  }, [data === null || data === void 0 ? void 0 : data.comments]);\n  function getReplies(parentId) {\n    return commentsByParentId[parentId];\n  }\n  function createLocalComment(comment) {\n    setComments(prevComments => {\n      return [comment, ...prevComments];\n    });\n  }\n  function updateLocalComment(id, updatedComment) {\n    setComments(prevComments => {\n      return prevComments.map(comment => {\n        return comment._id === id ? updatedComment : comment;\n      });\n    });\n  }\n  function deleteLocalComment(id) {\n    setComments(prevComments => {\n      return prevComments.filter(comment => comment._id !== id);\n    });\n  }\n  function toggleLocalCommentLike(id, addLike) {\n    setComments(prevComments => {\n      return prevComments.map(comment => {\n        if (id === comment._id) {\n          const currentCount = comment.likeCount || 0;\n          return {\n            ...comment,\n            likeCount: addLike ? currentCount + 1 : Math.max(currentCount - 1, 0),\n            likedByMe: addLike\n          };\n        } else {\n          return comment;\n        }\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      post: data,\n      // ✅ FIXED\n      postId: id,\n      comments,\n      getReplies,\n      createComment: createLocalComment,\n      updateComment: updateLocalComment,\n      deleteComment: deleteLocalComment,\n      toggleCommentLike: toggleLocalCommentLike,\n      currentUser: {\n        id: \"688785e69f794e8d634682c7\",\n        name: \"csallysh\"\n      },\n      // ✅ temp mock user if not passed from auth\n      loading\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"error-msg\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 3\n  }, this);\n}\n_s2(PostProvider, \"+gKVu1MrU9vRMaQsPCAkM2Vn3/A=\", false, function () {\n  return [useParams, useAsync];\n});\n_c = PostProvider;\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useMemo","useState","useParams","useAsync","getPost","jsxDEV","_jsxDEV","Context","createContext","usePost","_s","PostProvider","children","_s2","id","loading","error","value","data","comments","setComments","commentsByParentId","group","forEach","comment","parentId","push","console","log","map","_id","getReplies","createLocalComment","prevComments","updateLocalComment","updatedComment","deleteLocalComment","filter","toggleLocalCommentLike","addLike","currentCount","likeCount","Math","max","likedByMe","Provider","post","postId","createComment","updateComment","deleteComment","toggleCommentLike","currentUser","name","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/chawsuhan/git-test/sem7-project/project/src/contexts/PostContext.js"],"sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { useAsync } from \"../hooks/useAsync\"\nimport { getPost } from \"../services/posts\"\n\nconst Context = React.createContext()\n\nexport function usePost() {\n  return useContext(Context)\n}\n\nexport function PostProvider({ children }) {\n  const { id } = useParams()\n  const { loading, error, value: data } = useAsync(() => getPost(id), [id])\n  const [comments, setComments] = useState([])\n  const commentsByParentId = useMemo(() => {\n    const group = {}\n    comments.forEach(comment => {\n      group[comment.parentId] ||= []\n      group[comment.parentId].push(comment)\n    })\n    return group\n  }, [comments])\nconsole.log(\"All comments:\", comments)\nconsole.log(\"Grouped comments:\", commentsByParentId)\n\n  useEffect(() => {\n  if (data?.comments == null) return\n  setComments(\n    data.comments.map(comment => ({\n      ...comment,\n      id: comment._id,\n      parentId: comment.parentId || null,\n    }))\n  )\n}, [data?.comments])\n\n  function getReplies(parentId) {\n    return commentsByParentId[parentId]\n  }\n\n  function createLocalComment(comment) {\n    setComments(prevComments => {\n      return [comment, ...prevComments]\n    })\n  }\n\n  function updateLocalComment(id, updatedComment) {\n  setComments(prevComments => {\n    return prevComments.map(comment => {\n      return comment._id === id ? updatedComment : comment\n    })\n  })\n}\n\n  function deleteLocalComment(id) {\n    setComments(prevComments => {\n      return prevComments.filter(comment => comment._id !== id)\n    })\n  }\n\n  function toggleLocalCommentLike(id, addLike) {\n  setComments(prevComments => {\n    return prevComments.map(comment => {\n      if (id === comment._id) {\n        const currentCount = comment.likeCount || 0\n        return {\n          ...comment,\n          likeCount: addLike ? currentCount + 1 : Math.max(currentCount - 1, 0),\n          likedByMe: addLike,\n        }\n      } else {\n        return comment\n      }\n    })\n  })\n}\n\n\n  return (\n  <Context.Provider\n    value={{\n      post: data, // ✅ FIXED\n      postId: id,\n      comments,\n      getReplies,\n      createComment: createLocalComment,\n      updateComment: updateLocalComment,\n      deleteComment: deleteLocalComment,\n      toggleCommentLike: toggleLocalCommentLike,\n      currentUser: { id: \"688785e69f794e8d634682c7\", name: \"csallysh\" }, // ✅ temp mock user if not passed from auth\n      loading,\n    }}\n  >\n    {loading ? (\n      <h1>Loading</h1>\n    ) : error ? (\n      <h1 className=\"error-msg\">{error}</h1>\n    ) : (\n      children\n    )}\n  </Context.Provider>\n)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}