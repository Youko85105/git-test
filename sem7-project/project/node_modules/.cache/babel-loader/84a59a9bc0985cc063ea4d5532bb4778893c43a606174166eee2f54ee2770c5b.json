{"ast":null,"code":"// services/notification.service.js\nimport Notification from \"../models/notification.model.js\";\nexport async function notify({\n  userId,\n  actorId,\n  type,\n  message,\n  metadata\n}) {\n  var _global$io;\n  const doc = await Notification.create({\n    user_id: userId,\n    actor_id: actorId,\n    type,\n    message,\n    metadata\n  });\n  // optional: push over WS if user online\n  (_global$io = global.io) === null || _global$io === void 0 ? void 0 : _global$io.to(String(userId)).emit(\"notification:new\", doc);\n  return doc;\n}","map":{"version":3,"names":["Notification","notify","userId","actorId","type","message","metadata","_global$io","doc","create","user_id","actor_id","global","io","to","String","emit"],"sources":["/Users/chawsuhan/git-test/sem7-project/project/src/services/notifications.js"],"sourcesContent":["// services/notification.service.js\nimport Notification from \"../models/notification.model.js\";\n\nexport async function notify({ userId, actorId, type, message, metadata }) {\n  const doc = await Notification.create({\n    user_id: userId, actor_id: actorId, type, message, metadata\n  });\n  // optional: push over WS if user online\n  global.io?.to(String(userId)).emit(\"notification:new\", doc);\n  return doc;\n}\n"],"mappings":"AAAA;AACA,OAAOA,YAAY,MAAM,iCAAiC;AAE1D,OAAO,eAAeC,MAAMA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EAAA,IAAAC,UAAA;EACzE,MAAMC,GAAG,GAAG,MAAMR,YAAY,CAACS,MAAM,CAAC;IACpCC,OAAO,EAAER,MAAM;IAAES,QAAQ,EAAER,OAAO;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EACrD,CAAC,CAAC;EACF;EACA,CAAAC,UAAA,GAAAK,MAAM,CAACC,EAAE,cAAAN,UAAA,uBAATA,UAAA,CAAWO,EAAE,CAACC,MAAM,CAACb,MAAM,CAAC,CAAC,CAACc,IAAI,CAAC,kBAAkB,EAAER,GAAG,CAAC;EAC3D,OAAOA,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}