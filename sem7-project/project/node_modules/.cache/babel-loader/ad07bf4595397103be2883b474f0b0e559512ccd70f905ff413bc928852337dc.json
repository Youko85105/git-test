{"ast":null,"code":"// services/notification.service.js\nimport mongoose from \"mongoose\";\nimport Notification from \"../models/notification.model.js\";\n\n/**\n * Create and (optionally) push a notification.\n * @param {Object} p\n * @param {string|ObjectId} p.userId  - recipient\n * @param {string|ObjectId} [p.actorId] - who triggered it\n * @param {string} p.type - e.g. 'post:new'\n * @param {string} [p.message]\n * @param {Object} [p.metadata] - { postId, commentId, status, amount, ... }\n */\nexport async function notify({\n  userId,\n  actorId,\n  type,\n  message,\n  metadata\n}) {\n  const doc = await Notification.create({\n    user_id: new mongoose.Types.ObjectId(userId),\n    actor_id: actorId ? new mongoose.Types.ObjectId(actorId) : undefined,\n    type,\n    message,\n    metadata\n  });\n\n  // Optional socket push if you add Socket.IO later:\n  // global.io?.to(String(userId)).emit(\"notification:new\", doc);\n\n  return doc;\n}","map":{"version":3,"names":["mongoose","Notification","notify","userId","actorId","type","message","metadata","doc","create","user_id","Types","ObjectId","actor_id","undefined"],"sources":["/Users/chawsuhan/git-test/sem7-project/project/src/services/notifications.js"],"sourcesContent":["// services/notification.service.js\nimport mongoose from \"mongoose\";\nimport Notification from \"../models/notification.model.js\";\n\n/**\n * Create and (optionally) push a notification.\n * @param {Object} p\n * @param {string|ObjectId} p.userId  - recipient\n * @param {string|ObjectId} [p.actorId] - who triggered it\n * @param {string} p.type - e.g. 'post:new'\n * @param {string} [p.message]\n * @param {Object} [p.metadata] - { postId, commentId, status, amount, ... }\n */\nexport async function notify({ userId, actorId, type, message, metadata }) {\n  const doc = await Notification.create({\n    user_id: new mongoose.Types.ObjectId(userId),\n    actor_id: actorId ? new mongoose.Types.ObjectId(actorId) : undefined,\n    type,\n    message,\n    metadata,\n  });\n\n  // Optional socket push if you add Socket.IO later:\n  // global.io?.to(String(userId)).emit(\"notification:new\", doc);\n\n  return doc;\n}\n"],"mappings":"AAAA;AACA,OAAOA,QAAQ,MAAM,UAAU;AAC/B,OAAOC,YAAY,MAAM,iCAAiC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,MAAMA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EACzE,MAAMC,GAAG,GAAG,MAAMP,YAAY,CAACQ,MAAM,CAAC;IACpCC,OAAO,EAAE,IAAIV,QAAQ,CAACW,KAAK,CAACC,QAAQ,CAACT,MAAM,CAAC;IAC5CU,QAAQ,EAAET,OAAO,GAAG,IAAIJ,QAAQ,CAACW,KAAK,CAACC,QAAQ,CAACR,OAAO,CAAC,GAAGU,SAAS;IACpET,IAAI;IACJC,OAAO;IACPC;EACF,CAAC,CAAC;;EAEF;EACA;;EAEA,OAAOC,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}